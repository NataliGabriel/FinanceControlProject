@page "/register"
@using FinanceControl.Data
@inject FinanceControl.Data.AuthenticationService authService
@inject NavigationManager navigationManager


<div class="login-form">
    <div class="form-group">
        <label for="username">Complete Name:</label>
        <input type="text" id="username" class="form-control" @bind="nome"/>
    </div>

    <div class="form-group">
        <label for="password">Email:</label>
        <input required="true" type="email" id="email" class="form-control" @bind="email"/>
    </div>
    <div class="form-group">
        <label for="password">Phone Number:</label>
        <input required="true" type="tel" id="phone" pattern="[0-9]{3}-[0-9]{2}-[0-9]{3}" class="form-control" @bind="telefone"/>
    </div>
    <div class="form-group">
        <label for="password">Password:</label>
        <input required="true" type="password" id="password" class="form-control" @bind="senha"/>
    </div>
    <button class="btn-login" @onclick="Cadastrar">Cadastrar</button>
    <label @onclick="Login" style="cursor:pointer; color: blue; text-decoration: underline;">Login</label>
    @if (errorMessage != null)
    {
        <p class="error-message">@errorMessage</p>
    }
</div>

@code {
    private FinanceControl.Data.Authentication _user;
    private string errorMessage = "";
    private int financeID;

    private string nome;
    private string email;
    private string telefone;
    private string senha;

    private async void Cadastrar()
    {
        if (string.IsNullOrEmpty(nome) || string.IsNullOrEmpty(email) || string.IsNullOrEmpty(telefone) || string.IsNullOrEmpty(senha))
        {
            errorMessage = "Fields cannot be empty";
        }
        else
        {
            Authentication newUser = new Authentication
            {
                id = await authService.RetornaId(),
                user = nome,
                email = email,
                phone = telefone,
                password = senha
            };

            if (await authService.Cadastrar(newUser))
            {
                await authService.SendEmail(newUser, true);
                navigationManager.NavigateTo("/");
            }
            else
            {
                errorMessage = "Check for errors.";
            }
        }
    }

    private void Login()
    {
        navigationManager.NavigateTo("/");
    }

}