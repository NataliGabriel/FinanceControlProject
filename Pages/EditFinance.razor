@page "/editfinance"
@inject FinanceControl.Data.FinanceService expenseService
@inject NavigationManager navigationManager

<h3>Editar Despesa</h3>

@if (expense != null)
{
    <div class="form-container">
        <div class="form-group">
            <label for="expenseName">Finance Name:</label>
            <input type="text" id="expenseName" class="form-control" @bind="expense.name" />
        </div>

        <div class="form-group">
            <label for="expenseAmount">Value:</label>
            <input type="number" id="expenseAmount" class="form-control" @bind="expense._amount" />
        </div>

        <div class="form-group">
            <label for="expenseCategory">Categorie:</label>
            <select id="expenseCategory" @bind="expense.category">
                <option value="Despesa">Expense</option>
                <option value="Ganho">Earn</option>
            </select>
        </div>

        <button class="btn-edit" @onclick="UpdateExpense">Save</button>
    </div>
}
else
{
    <p>Despesa não encontrada para edição.</p>
}

@code {
    private FinanceControl.Data.Finance expense;

    private int financeID;

    protected override async Task OnInitializedAsync()
    {
        var query = new Uri(navigationManager.Uri).Query;
        var queryParams = System.Web.HttpUtility.ParseQueryString(query);

        if (queryParams.AllKeys.Contains("financeID"))
        {
            int.TryParse(queryParams["financeID"], out financeID);
        }
        expense = await expenseService.GetFinanceById(financeID);
    }

    private async Task UpdateExpense()
    {
        if (expense != null)
        {
            await expenseService.UpdateFinance(expense);

            navigationManager.NavigateTo("/finance");
        }
    }
}
